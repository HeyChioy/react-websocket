{"version":3,"sources":["../src/WebSocketRC.js"],"names":["WebSocketRC","props","handleMessage","data","json","JSON","parse","action","state","actionKey","handler","actionMap","onMessage","e","result","rawText","url","protocol","onCreate","onClose","onError","ws","WebSocket","setWebSocket","close","proxy","send","stringify","onopen","readyState","onmessage","onerror","onclose","display","Component","propTypes","string","isRequired","func","object"],"mappings":"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","file":"WebSocketRC.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass WebSocketRC extends React.Component {\n  constructor(props) {\n    super(props);\n    const { url, protocol } = props; // Config\n    const { onCreate, onMessage, onClose, onError } = props;// Event\n    const { actionKey = 'SYS_ACTION', actionMap = {} } = props;\n    this.state = {\n      ws: new WebSocket(url, protocol),\n      // Event\n      onCreate,\n      onMessage,\n      onClose,\n      onError,\n      // Config\n      url,\n      protocol,\n      actionKey,\n      actionMap,\n    };\n  }\n  componentWillMount() {\n    this.setWebSocket();\n  }\n  handleMessage = ({ data }) => {\n    try {\n      const json = JSON.parse(data);\n      const action = json[this.state.actionKey];\n      const handler = this.state.actionMap[action];\n      if (action && handler) {\n          handler(json);\n      } else {\n        this.state.onMessage(json);\n      }\n    } catch (e) {\n      const result = {\n         rawText: data,\n      };\n      this.state.onMessage(result);\n    }\n  };\n  componentWillUnmount() {\n    this.state.ws.close();\n  }\n  setWebSocket() {\n    const ws = this.state.ws;\n    const proxy = {\n      send(data) {\n        ws.send(typeof data === 'string' ? data : JSON.stringify(data));\n      }\n    };\n    ws.onopen = () => {\n      if (this.state.onCreate && ws.readyState === 1) {\n        this.state.onCreate(proxy, ws);\n      }\n    };\n    ws.onmessage = this.handleMessage;\n    ws.onerror = this.state.onError;\n    ws.onclose = this.state.onClose;\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: 'none',\n        }}\n      >\n        WebSocket React Component by KyuuSeiryuu.\n      </div>\n    );\n  }\n}\n\nWebSocketRC.propTypes = {\n    url: PropTypes.string.isRequired,\n    protocol: PropTypes.string,\n    onMessage: PropTypes.func.isRequired,\n    onCreate: PropTypes.func,\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    actionMap: PropTypes.object,\n    actionKey: PropTypes.string,\n};\n\nexport default WebSocketRC;\n"]}